<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true">

    <!-- Spring properties to log -->
    <springProperty scope="context" name="SERVICE_NAME" source="spring.application.name"/>
    <springProperty scope="context" name="ENV"          source="logging.gardrops.environment" defaultValue="local"/>

    <!-- === JSON stdout (ELK/EFK friendly) === -->
    <appender name="JSON_CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
            <providers>
                <timestamp/>
                <level/>
                <threadName/>
                <loggerName/>

                <!-- Custom provider to mask sensitive data in log messages -->
                <provider class="com.gardrops.shared.logging.LogMaskingMessageJsonProvider"/>

                <mdc/>       <!-- X-Correlation-Id -->
                <context/>
                <globalCustomFields>{"service":"${SERVICE_NAME}","environment":"${ENV}"}</globalCustomFields>
            </providers>
        </encoder>
    </appender>

    <!-- === JSON file (ELK/EFK friendly) === -->
    <appender name="JSON_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>logs/app.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>logs/app.%d{yyyy-MM-dd}.gz</fileNamePattern>
            <maxHistory>14</maxHistory>
            <!-- <totalSizeCap>1GB</totalSizeCap> -->
        </rollingPolicy>
        <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
            <providers>
                <timestamp/>
                <level/>
                <threadName/>
                <loggerName/>
                <provider class="com.gardrops.shared.logging.LogMaskingMessageJsonProvider"/>
                <mdc/>
                <context/>
                <globalCustomFields>{"service":"${SERVICE_NAME}","environment":"${ENV}"}</globalCustomFields>
            </providers>
        </encoder>
    </appender>

    <!-- === Async Appenders === -->
    <appender name="ASYNC_CONSOLE" class="ch.qos.logback.classic.AsyncAppender">
        <queueSize>8192</queueSize>
        <discardingThreshold>0</discardingThreshold>
        <neverBlock>true</neverBlock>
        <includeCallerData>false</includeCallerData>
        <appender-ref ref="JSON_CONSOLE"/>
    </appender>

    <!-- Dosyayı da async kullanmak istersen aç -->
    <!--
    <appender name="ASYNC_FILE" class="ch.qos.logback.classic.AsyncAppender">
        <queueSize>8192</queueSize>
        <discardingThreshold>0</discardingThreshold>
        <neverBlock>true</neverBlock>
        <includeCallerData>false</includeCallerData>
        <appender-ref ref="JSON_FILE"/>
    </appender>
    -->

    <!-- === Root === -->
    <root level="INFO">
        <appender-ref ref="ASYNC_CONSOLE"/>
        <!-- <appender-ref ref="ASYNC_FILE"/> -->
    </root>

    <!-- === Loggers === -->
    <logger name="org.springframework" level="INFO"/>
    <logger name="org.hibernate" level="WARN"/>
</configuration>
