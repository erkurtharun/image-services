spring:
  application:
    name: image-upload-api

  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB

  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:kafka:9092}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.ByteArraySerializer
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.ByteArrayDeserializer
      group-id: ${KAFKA_CONSUMER_GROUP:image-processing}

  data:
    redis:
      url: ${SPRING_DATA_REDIS_URL:redis://redis:6379/0}
      host: ${SPRING_DATA_REDIS_HOST:redis}
      port: ${SPRING_DATA_REDIS_PORT:6379}
      database: ${SPRING_DATA_REDIS_DATABASE:0}
      password: ${SPRING_DATA_REDIS_PASSWORD:}
      timeout: 3s
      lettuce:
        pool:
          max-active: 32
          max-idle: 16
          min-idle: 2

app:
  topics:
    imageDeleted: ${APP_TOPICS_IMAGE_DELETED:image-deleted}
server:
  port: 8080

logging:
  level:
    root: INFO
    com.gardrops: INFO
  gardrops:
    service: ${spring.application.name}
    environment: prod

ratelimit:
  namespace: gardrops
  fail-open: true

gardrops:
  processing:
    baseUrl: ${GARDROPS_PROCESSING_BASEURL:http://image-processing-api:8081}
  upload:
    ttlHours: ${GARDROPS_UPLOAD_TTLHOURS:1}
    maxImages: ${GARDROPS_UPLOAD_MAXIMAGES:10}
    baseDir: ${GARDROPS_UPLOAD_BASEDIR:/tmp/uploads}

springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui
    enabled: true

management:
  endpoints:
    web:
      exposure:
        include: health,info
  endpoint:
    health:
      show-details: never
